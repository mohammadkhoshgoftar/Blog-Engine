version: '3.8'

services:
  laravel:
    build:
      context: .
      dockerfile: docker/php/Dockerfile

    container_name: BlogEngine
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  horizon:
      build:
          context: .
          dockerfile: docker/php/Dockerfile
      working_dir: /var/www/html
      volumes:
          - .:/var/www/html
      depends_on:
          - mysql
          - nginx
          - redis
      command: php artisan horizon
      networks:
          - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "8080:80"
    depends_on:
      - laravel
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: blog_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_container
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - app-network

  elasticsearch:
    image: elasticsearch:8.11.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ports:
      - "9200:9200"
    networks:
      - app-network
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
        image: kibana:8.11.3
        container_name: kibana
        depends_on:
            - elasticsearch
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        ports:
            - "5601:5601"
        networks:
            - app-network

  redis:
      image: redis:alpine
      container_name: redis
      restart: unless-stopped
      ports:
          - "6379:6379"
      networks:
          - app-network
volumes:
  mysql-data:
  elasticsearch-data:

networks:
  app-network:
    driver: bridge
